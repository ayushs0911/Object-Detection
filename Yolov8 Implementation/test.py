# -*- coding: utf-8 -*-
"""test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QKSRqtpEt_R2BEt_csMHjOZ7MChKL8cp
"""

!pip install -q kaggle
!mkdir ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 /root/.kaggle/kaggle.json
! kaggle datasets download -d mistag/arthropod-taxonomy-orders-object-detection-testset

!unzip arthropod-taxonomy-orders-object-detection-testset

from google.colab import drive
drive.mount('/content/drive')

! pip install ultralytics

import ultralytics
from IPython import display
display.clear_output()
!yolo checks

from ultralytics import YOLO

# Load a model
model = YOLO("/content/drive/MyDrive/Saved models/best.pt") 
batch_size = 32
imgsz = 640

import cv2
from matplotlib import pyplot as plt

from PIL import Image

# Image.open("/content/ArTaxOr_TestSet/positives/1d9c19837543.jpg")

results =model.predict(Image.open("/content/ArTaxOr_TestSet/positives/1d9c19837543.jpg"))

for result in results:
    boxes = result.boxes  # Boxes object for bbox outputs
    masks = result.masks  # Masks object for segmentation masks outputs
    probs = result.probs  # Class probabilities for classification outputs

res_plotted = results[0].plot()

plt.imshow(cv2.cvtColor(res_plotted, cv2.COLOR_BGR2RGB))

from glob import glob
from os import path
import os

test_set = "/content/ArTaxOr_TestSet/positives"

test_images = [Image.open(jpg) for jpg in glob(path.join(test_set, '*.jpg'))]

for img in test_images:
  results = model.predict(img, save = True)

output = "/content/runs/detect/predict"
plt.figure(figsize = (20,14))
for i, filename in enumerate(os.listdir(output)):
  img = cv2.imread(os.path.join(output, filename))
  ax = plt.subplot(3,3,i+1)
  plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
  plt.axis('off')
  if i == 8:
    break

